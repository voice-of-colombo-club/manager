// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type AhCounts struct {
	ID       string `json:"id"`
	SpeechID string `json:"speechId"`
	Ah       int    `json:"ah"`
	Um       int    `json:"um"`
	Er       int    `json:"er"`
	Well     int    `json:"well"`
	So       int    `json:"so"`
	Like     int    `json:"like"`
	But      int    `json:"but"`
	Repeats  int    `json:"repeats"`
	Other    string `json:"other"`
}

type CreateMeeting struct {
	ID                   *string `json:"id"`
	Number               int     `json:"number"`
	Theme                string  `json:"theme"`
	Location             string  `json:"location"`
	JointMeetingClubName *string `json:"jointMeetingClubName"`
	IsAreaMeeting        bool    `json:"isAreaMeeting"`
	Timestamp            int     `json:"timestamp"`
}

type EvaluationDetails struct {
	ClarityRating      int     `json:"clarityRating"`
	VocalVarietyRating int     `json:"vocalVarietyRating"`
	EyeContactRating   int     `json:"eyeContactRating"`
	GesturesRating     int     `json:"gesturesRating"`
	AudienceAwareness  int     `json:"audienceAwareness"`
	ComfortLevel       int     `json:"comfortLevel"`
	Interest           int     `json:"interest"`
	OthersJSON         *string `json:"othersJson"`
}

type MeetingResponse struct {
	Page     []*Meeting `json:"page"`
	PageData *PageData  `json:"pageData"`
}

type MeetingSearchCriteria struct {
	Limit  *int    `json:"limit"`
	Offset *int    `json:"offset"`
	Number *int    `json:"number"`
	ID     *string `json:"id"`
}

type PageData struct {
	Count  *int `json:"count"`
	Limit  *int `json:"limit"`
	Offset *int `json:"offset"`
}

type RecordingProcessInput struct {
	ZoomMeetingID string                  `json:"zoomMeetingId"`
	Speeches      []*RecordingSpeechInput `json:"speeches"`
}

type RecordingSpeechInput struct {
	From        string  `json:"from"`
	To          string  `json:"to"`
	SpeechID    *string `json:"speechId"`
	GalleryCrop bool    `json:"galleryCrop"`
}

type SaveSpeech struct {
	ID         *string `json:"id"`
	MeetingID  *string `json:"meetingId"`
	SpeechType string  `json:"speechType"`
	Timestamp  *int    `json:"timestamp"`
	Location   *string `json:"location"`
	Project    *string `json:"project"`
	UserID     string  `json:"userId"`
	SpeechLink *string `json:"speechLink"`
}

type SpeechSearchCriteria struct {
	Limit       *int      `json:"limit"`
	Offset      *int      `json:"offset"`
	ID          *string   `json:"id"`
	UserID      *string   `json:"userId"`
	SpeechTypes []*string `json:"speechTypes"`
	Title       *string   `json:"title"`
}

type UserSearchCriteria struct {
	Limit  *int    `json:"limit"`
	Offset *int    `json:"offset"`
	ID     *string `json:"id"`
}
